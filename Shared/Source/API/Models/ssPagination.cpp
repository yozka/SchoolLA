#include "ssPagination.h"
///----------------------------------------------------------------------------




///----------------------------------------------------------------------------
using namespace API;
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// Constructor
/// 
///
///----------------------------------------------------------------------------
APagination :: APagination(QObject *parent) 
	: 
	QObject(parent),
    mPerPage(20), 
	mCurrentPage(0), 
	mCurrentPageHeader("X-Pagination-Current-Page"), 
	mTotalCount(0),
    mTotalCountHeader("X-Pagination-Total-Count"), 
	mPageCount(0),
	mPageCountHeader("X-Pagination-Page-Count")
{

}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
int APagination :: perPage() const
{
    return mPerPage;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
int APagination :: currentPage() const
{
    return mCurrentPage;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
QString APagination :: currentPageHeader() const
{
    return mCurrentPageHeader;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
int APagination :: totalCount() const
{
    return mTotalCount;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
QString APagination :: totalCountHeader() const
{
    return mTotalCountHeader;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
int APagination :: pageCount() const
{
    return mPageCount;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
QString APagination :: pageCountHeader() const
{
    return mPageCountHeader;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
APagination::PaginationPolicy APagination::policy() const
{
    return mPolicy;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
int APagination :: limit() const
{
    return mLimit;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
int APagination :: offset() const
{
    return mOffset;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
QString APagination :: cursorQueryParam() const
{
    return mCursorQueryParam;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
QString APagination :: cursorValue() const
{
    return mCursorValue;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination :: setPerPage(int perPage)
{
    if (mPerPage == perPage)
        return;

    mPerPage = perPage;
    emit perPageChanged(perPage);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination::setCurrentPage(int currentPage)
{
    if (mCurrentPage == currentPage)
        return;

    mCurrentPage = currentPage;
    emit currentPageChanged(currentPage);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination::setCurrentPageHeader(QString currentPageHeader)
{
    if (mCurrentPageHeader == currentPageHeader)
        return;

    mCurrentPageHeader = currentPageHeader;
    emit currentPageHeaderChanged(currentPageHeader);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination :: setTotalCount(int totalCount)
{
    if (mTotalCount == totalCount)
        return;

    mTotalCount = totalCount;
    emit totalCountChanged(totalCount);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination :: setTotalCountHeader(QString totalCountHeader)
{
    if (mTotalCountHeader == totalCountHeader)
        return;

    mTotalCountHeader = totalCountHeader;
    emit totalCountHeaderChanged(totalCountHeader);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination :: setPageCount(int pageCount)
{
    if (mPageCount == pageCount)
        return;

    mPageCount = pageCount;
    emit pageCountChanged(pageCount);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination::setPageCountHeader(QString pageCountHeader)
{
    if (mPageCountHeader == pageCountHeader)
        return;

    mPageCountHeader = pageCountHeader;
    emit pageCountHeaderChanged(pageCountHeader);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination :: setPolicy(APagination::PaginationPolicy policy)
{
    if (mPolicy == policy)
        return;

    mPolicy = policy;
    emit policyChanged(policy);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination :: setLimit(int limit)
{
    if (mLimit == limit)
        return;

    mLimit = limit;
    emit limitChanged(limit);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination::setOffset(int offset)
{
    if (mOffset == offset)
        return;

    mOffset = offset;
    emit offsetChanged(offset);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination::setCursorQueryParam(QString cursorQueryParam)
{
    if (mCursorQueryParam == cursorQueryParam)
        return;

    mCursorQueryParam = cursorQueryParam;
    emit cursorQueryParamChanged(cursorQueryParam);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
///  
/// 
///
///----------------------------------------------------------------------------
void APagination::setCursorValue(QString cursorValue)
{
    if (mCursorValue == cursorValue)
        return;

    mCursorValue = cursorValue;
    emit cursorValueChanged(cursorValue);
}
