#include "ssItem.h"
#include <QDebug>
///----------------------------------------------------------------------------



///----------------------------------------------------------------------------
using namespace API;
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// constructor
/// 
///
///----------------------------------------------------------------------------
AItem :: AItem()
	:
		mIsUpdated(false), 
		mIsValid(false) 
{
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// constructor
/// 
///
///----------------------------------------------------------------------------
AItem :: AItem(const QVariantMap &object, const QString &idField)
	:
	mObject(object),
	mIdField(idField),
	mIsUpdated(false),
	mIsValid(true)
{
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// 
/// 
///
///----------------------------------------------------------------------------
QVariant AItem :: value(const QString &key) const
{
    return mObject.value(key);
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// 
/// 
///
///----------------------------------------------------------------------------
QStringList AItem::keys() const 
{
    return mObject.keys();
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// 
/// 
///
///----------------------------------------------------------------------------
QString AItem :: id() const 
{
    return mObject.value(mIdField).toString();
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// 
/// 
///
///----------------------------------------------------------------------------
bool AItem::isUpdated() const
{
    return mIsUpdated;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// 
/// 
///
///----------------------------------------------------------------------------
bool AItem::isValid() const
{
    return mIsValid;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// 
/// 
///
///----------------------------------------------------------------------------
void AItem :: update(const QVariantMap &value) 
{
    QMapIterator<QString, QVariant> i(value);
    while (i.hasNext()) 
	{
        i.next();
        mObject.insert(i.key(), i.value());
    }
    mIsUpdated = true;
}
///----------------------------------------------------------------------------






 ///---------------------------------------------------------------------------
///
/// 
/// 
///
///----------------------------------------------------------------------------
bool AItem::operator==(const AItem &other) 
{
    return id() == other.id();
}
